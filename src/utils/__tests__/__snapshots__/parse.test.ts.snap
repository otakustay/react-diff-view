// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`parseDiff ensure test case 1`] = `
Array [
  Object {
    "hunks": Array [
      Object {
        "changes": Array [
          Object {
            "content": "    test('App renders correctly', () => {",
            "isNormal": true,
            "newLineNumber": 21,
            "oldLineNumber": 21,
            "type": "normal",
          },
          Object {
            "content": "        expect(renderer.create(<App diffText={'deff'} />).toJSON()).toMatchSnapshot();",
            "isDelete": true,
            "lineNumber": 22,
            "type": "delete",
          },
          Object {
            "content": "        expect(renderer.create(<App diffText={'diff'} />).toJSON()).toMatchSnapshot();",
            "isInsert": true,
            "lineNumber": 22,
            "type": "insert",
          },
          Object {
            "content": "    });",
            "isNormal": true,
            "newLineNumber": 23,
            "oldLineNumber": 23,
            "type": "normal",
          },
        ],
        "content": "@@ -21,3 +21,3 @@ describe('basic test', () => {",
        "isPlain": false,
        "newLines": 3,
        "newStart": 21,
        "oldLines": 3,
        "oldStart": 21,
      },
    ],
    "newEndingNewLine": true,
    "newMode": "100644",
    "newPath": "src/__test__/index.test.jsx",
    "newRevision": "7883597",
    "oldEndingNewLine": true,
    "oldMode": "100644",
    "oldPath": "src/__test__/index.test.jsx",
    "oldRevision": "643c2f0",
    "type": "modify",
  },
]
`;

exports[`parseDiff ensure test case 2`] = `
Array [
  Object {
    "hunks": Array [
      Object {
        "changes": Array [
          Object {
            "content": "    test('App renders correctly', () => {",
            "isNormal": true,
            "newLineNumber": 21,
            "oldLineNumber": 21,
            "type": "normal",
          },
          Object {
            "content": "        expect(renderer.create(<App diffText={'deff'} />).toJSON()).toMatchSnapshot();",
            "isDelete": true,
            "lineNumber": 22,
            "type": "delete",
          },
          Object {
            "content": "        expect(renderer.create(<App diffText={'diff'} />).toJSON()).toMatchSnapshot();",
            "isInsert": true,
            "lineNumber": 22,
            "type": "insert",
          },
          Object {
            "content": "    });",
            "isNormal": true,
            "newLineNumber": 23,
            "oldLineNumber": 23,
            "type": "normal",
          },
        ],
        "content": "@@ -21,3 +21,3 @@ describe('basic test', () => {",
        "isPlain": false,
        "newLines": 3,
        "newStart": 21,
        "oldLines": 3,
        "oldStart": 21,
      },
    ],
    "newEndingNewLine": true,
    "newMode": "100644",
    "newPath": "src/__test__/index.test.jsx",
    "newRevision": "7883597",
    "oldEndingNewLine": true,
    "oldMode": "100644",
    "oldPath": "src/__test__/index.test.jsx",
    "oldRevision": "643c2f0",
    "type": "modify",
  },
]
`;

exports[`parseDiff insert 1`] = `
Array [
  Object {
    "hunks": Array [
      Object {
        "changes": Array [
          Object {
            "content": "const genericExtension = new Set(['.tpl', '.tmp']);",
            "isNormal": true,
            "newLineNumber": 155,
            "oldLineNumber": 155,
            "type": "normal",
          },
          Object {
            "content": "export const detectLanguage = filename => {",
            "isNormal": true,
            "newLineNumber": 156,
            "oldLineNumber": 156,
            "type": "normal",
          },
          Object {
            "content": "    // 仅仅是为了处理特殊情况，特殊情况应该已经处理完毕",
            "isInsert": true,
            "lineNumber": 157,
            "type": "insert",
          },
          Object {
            "content": "    if (!filename) {",
            "isNormal": true,
            "newLineNumber": 158,
            "oldLineNumber": 157,
            "type": "normal",
          },
          Object {
            "content": "        return 'text';",
            "isNormal": true,
            "newLineNumber": 159,
            "oldLineNumber": 158,
            "type": "normal",
          },
          Object {
            "content": "    }",
            "isNormal": true,
            "newLineNumber": 160,
            "oldLineNumber": 159,
            "type": "normal",
          },
        ],
        "content": "@@ -155,5 +155,6 @@",
        "isPlain": false,
        "newLines": 6,
        "newStart": 155,
        "oldLines": 5,
        "oldStart": 155,
      },
    ],
    "newEndingNewLine": true,
    "newMode": "100644",
    "newPath": "src/common/utils/languages.js",
    "newRevision": "022bfd4",
    "oldEndingNewLine": true,
    "oldMode": "100644",
    "oldPath": "src/common/utils/languages.js",
    "oldRevision": "1eadcc9",
    "type": "modify",
  },
]
`;

exports[`parseDiff no newline at end of file 1`] = `
Array [
  Object {
    "hunks": Array [
      Object {
        "changes": Array [
          Object {
            "content": "iiiiiiiiiiiiiiiiiiiiii:WQiiiiiiiiiiiiejj",
            "isNormal": true,
            "newLineNumber": 1,
            "oldLineNumber": 1,
            "type": "normal",
          },
          Object {
            "content": "dsds",
            "isDelete": true,
            "lineNumber": 2,
            "type": "delete",
          },
          Object {
            "content": "dsdsds",
            "isInsert": true,
            "lineNumber": 2,
            "type": "insert",
          },
        ],
        "content": "@@ -1,2 +1,2 @@",
        "isPlain": false,
        "newLines": 2,
        "newStart": 1,
        "oldLines": 2,
        "oldStart": 1,
      },
    ],
    "newEndingNewLine": false,
    "newMode": "100644",
    "newPath": "README.md",
    "newRevision": "9acdf95",
    "oldEndingNewLine": false,
    "oldMode": "100644",
    "oldPath": "README.md",
    "oldRevision": "36f6985",
    "type": "modify",
  },
]
`;

exports[`parseDiff rename 1`] = `
Array [
  Object {
    "hunks": Array [],
    "newEndingNewLine": true,
    "newPath": "src/components/ErrorPages/ErrorBase.jsx",
    "oldEndingNewLine": true,
    "oldPath": "src/error/components/ErrorBase.jsx",
    "similarity": 100,
    "type": "rename",
  },
]
`;

exports[`parseDiff unidiff 1`] = `
Array [
  Object {
    "hunks": Array [
      Object {
        "changes": Array [
          Object {
            "content": "const genericExtension = new Set(['.tpl', '.tmp']);",
            "isNormal": true,
            "newLineNumber": 155,
            "oldLineNumber": 155,
            "type": "normal",
          },
          Object {
            "content": "export const detectLanguage = filename => {",
            "isNormal": true,
            "newLineNumber": 156,
            "oldLineNumber": 156,
            "type": "normal",
          },
          Object {
            "content": "    // 仅仅是为了处理特殊情况，特殊情况应该已经处理完毕",
            "isInsert": true,
            "lineNumber": 157,
            "type": "insert",
          },
          Object {
            "content": "    if (!filename) {",
            "isNormal": true,
            "newLineNumber": 158,
            "oldLineNumber": 157,
            "type": "normal",
          },
          Object {
            "content": "        return 'text';",
            "isNormal": true,
            "newLineNumber": 159,
            "oldLineNumber": 158,
            "type": "normal",
          },
          Object {
            "content": "    }",
            "isNormal": true,
            "newLineNumber": 160,
            "oldLineNumber": 159,
            "type": "normal",
          },
        ],
        "content": "@@ -155,5 +155,6 @@",
        "isPlain": false,
        "newLines": 6,
        "newStart": 155,
        "oldLines": 5,
        "oldStart": 155,
      },
    ],
    "newEndingNewLine": true,
    "newMode": "100644",
    "newPath": "x.js",
    "newRevision": "2222222",
    "oldEndingNewLine": true,
    "oldMode": "100644",
    "oldPath": "x.js",
    "oldRevision": "1111111",
    "type": "modify",
  },
]
`;
